#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3607
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MPXMobile.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="MobileMPX")]
	public partial class UsersAutDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBookmarkedDonor(BookmarkedDonor instance);
    partial void UpdateBookmarkedDonor(BookmarkedDonor instance);
    partial void DeleteBookmarkedDonor(BookmarkedDonor instance);
    partial void InsertLocalUser(LocalUser instance);
    partial void UpdateLocalUser(LocalUser instance);
    partial void DeleteLocalUser(LocalUser instance);
    partial void InsertLogAction(LogAction instance);
    partial void UpdateLogAction(LogAction instance);
    partial void DeleteLogAction(LogAction instance);
    partial void InsertLogSession(LogSession instance);
    partial void UpdateLogSession(LogSession instance);
    partial void DeleteLogSession(LogSession instance);
    #endregion
		
		public UsersAutDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MobileMPXConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public UsersAutDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsersAutDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsersAutDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public UsersAutDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BookmarkedDonor> BookmarkedDonors
		{
			get
			{
				return this.GetTable<BookmarkedDonor>();
			}
		}
		
		public System.Data.Linq.Table<LocalUser> LocalUsers
		{
			get
			{
				return this.GetTable<LocalUser>();
			}
		}
		
		public System.Data.Linq.Table<LogAction> LogActions
		{
			get
			{
				return this.GetTable<LogAction>();
			}
		}
		
		public System.Data.Linq.Table<LogSession> LogSessions
		{
			get
			{
				return this.GetTable<LogSession>();
			}
		}
	}
	
	[Table(Name="dbo.BookmarkedDonors")]
	public partial class BookmarkedDonor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Bookmarked_ID;
		
		private string _User_ID;
		
		private System.Nullable<int> _Donor_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookmarked_IDChanging(int value);
    partial void OnBookmarked_IDChanged();
    partial void OnUser_IDChanging(string value);
    partial void OnUser_IDChanged();
    partial void OnDonor_IDChanging(System.Nullable<int> value);
    partial void OnDonor_IDChanged();
    #endregion
		
		public BookmarkedDonor()
		{
			OnCreated();
		}
		
		[Column(Storage="_Bookmarked_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Bookmarked_ID
		{
			get
			{
				return this._Bookmarked_ID;
			}
			set
			{
				if ((this._Bookmarked_ID != value))
				{
					this.OnBookmarked_IDChanging(value);
					this.SendPropertyChanging();
					this._Bookmarked_ID = value;
					this.SendPropertyChanged("Bookmarked_ID");
					this.OnBookmarked_IDChanged();
				}
			}
		}
		
		[Column(Storage="_User_ID", DbType="VarChar(250)")]
		public string User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[Column(Storage="_Donor_ID", DbType="Int")]
		public System.Nullable<int> Donor_ID
		{
			get
			{
				return this._Donor_ID;
			}
			set
			{
				if ((this._Donor_ID != value))
				{
					this.OnDonor_IDChanging(value);
					this.SendPropertyChanging();
					this._Donor_ID = value;
					this.SendPropertyChanged("Donor_ID");
					this.OnDonor_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LocalUser")]
	public partial class LocalUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _First_Name;
		
		private string _Last_name;
		
		private string _Email;
		
		private string _Password;
		
		private System.Nullable<System.DateTime> _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_nameChanging(string value);
    partial void OnLast_nameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnCreated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public LocalUser()
		{
			OnCreated();
		}
		
		[Column(Storage="_First_Name", DbType="VarChar(50)")]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[Column(Storage="_Last_name", DbType="VarChar(50)")]
		public string Last_name
		{
			get
			{
				return this._Last_name;
			}
			set
			{
				if ((this._Last_name != value))
				{
					this.OnLast_nameChanging(value);
					this.SendPropertyChanging();
					this._Last_name = value;
					this.SendPropertyChanged("Last_name");
					this.OnLast_nameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Storage="_Created_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[Column(Storage="_Updated_at", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LogActions")]
	public partial class LogAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Log_ActionsId;
		
		private string _UserId;
		
		private string _Action;
		
		private System.Nullable<System.DateTime> _ActionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLog_ActionsIdChanging(int value);
    partial void OnLog_ActionsIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnActionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnActionDateChanged();
    #endregion
		
		public LogAction()
		{
			OnCreated();
		}
		
		[Column(Storage="_Log_ActionsId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Log_ActionsId
		{
			get
			{
				return this._Log_ActionsId;
			}
			set
			{
				if ((this._Log_ActionsId != value))
				{
					this.OnLog_ActionsIdChanging(value);
					this.SendPropertyChanging();
					this._Log_ActionsId = value;
					this.SendPropertyChanged("Log_ActionsId");
					this.OnLog_ActionsIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="VarChar(250)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_Action", DbType="VarChar(250)")]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[Column(Storage="_ActionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.LogSessions")]
	public partial class LogSession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Log_sessionId;
		
		private string _UserId;
		
		private System.Nullable<System.DateTime> _SessionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLog_sessionIdChanging(int value);
    partial void OnLog_sessionIdChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnSessionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSessionDateChanged();
    #endregion
		
		public LogSession()
		{
			OnCreated();
		}
		
		[Column(Storage="_Log_sessionId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Log_sessionId
		{
			get
			{
				return this._Log_sessionId;
			}
			set
			{
				if ((this._Log_sessionId != value))
				{
					this.OnLog_sessionIdChanging(value);
					this.SendPropertyChanging();
					this._Log_sessionId = value;
					this.SendPropertyChanged("Log_sessionId");
					this.OnLog_sessionIdChanged();
				}
			}
		}
		
		[Column(Storage="_UserId", DbType="VarChar(250)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[Column(Storage="_SessionDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SessionDate
		{
			get
			{
				return this._SessionDate;
			}
			set
			{
				if ((this._SessionDate != value))
				{
					this.OnSessionDateChanging(value);
					this.SendPropertyChanging();
					this._SessionDate = value;
					this.SendPropertyChanged("SessionDate");
					this.OnSessionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
